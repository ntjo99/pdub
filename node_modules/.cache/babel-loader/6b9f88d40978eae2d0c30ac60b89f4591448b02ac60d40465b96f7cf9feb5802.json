{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '@/assets/logo.png';\nconst _hoisted_1 = {\n  class: \"login-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Login\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"input-group\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"username\"\n}, \"Username:\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"input-group\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"Password:\", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"login-button\"\n}, \"Login\", -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"Background Image\",\n  class: \"background-image\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.login && $options.login(...args), [\"prevent\"])),\n    class: \"login-form\"\n  }, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.username = $event),\n    class: \"input-field\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.username]])]), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.password = $event),\n    class: \"input-field\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.password]])]), _hoisted_7], 32 /* HYDRATE_EVENTS */), _hoisted_8, _createElementVNode(\"p\", null, _toDisplayString(_ctx.hashedText), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["_imports_0","class","_createElementVNode","for","type","src","alt","_createElementBlock","_hoisted_1","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","login","_hoisted_3","_hoisted_4","id","_ctx","username","$event","_hoisted_5","_hoisted_6","password","_hoisted_7","_hoisted_8","_toDisplayString","hashedText"],"sources":["/home/nathan/repo/pdub/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n    <div class=\"login-container\">\n    <h2>Login</h2>\n    <form @submit.prevent=\"login\" class=\"login-form\">\n      <div class=\"input-group\">\n        <label for=\"username\">Username:</label>\n        <input type=\"text\" id=\"username\" v-model=\"username\" class=\"input-field\" />\n      </div>\n      <div class=\"input-group\">\n        <label for=\"password\">Password:</label>\n        <input type=\"password\" id=\"password\" v-model=\"password\" class=\"input-field\" />\n      </div>\n      <button type=\"submit\" class=\"login-button\">Login</button>\n    </form>\n    <img src=\"@/assets/logo.png\" alt=\"Background Image\" class=\"background-image\" />\n    <p>{{ hashedText }}</p>\n  </div>\n </template>\n\n<script>\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n    data() {\n        return {\n            \n        };\n    },\n    methods: {\n        login() {\n           \n            const user = { username: this.username, password: this.password };\n            this.$emit('login', user);\n        },\n    }\n\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\nbody {\n    background-color: #555555;\n    margin: 0 !important;\n}\n.login-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  background-color: #555555;\n  margin: 0;\n  padding: 0;\n  margin-top: -100px;\n}\n\n.login-form {\n  background-color: hsla(50, 100%, 50%, .9);\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\n  width: 300px;\n}\n\n.input-group {\n  margin-bottom: 15px;\n}\n\n.label {\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n\n.input-field {\n  width: 90%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n}\n\n.login-button {\n  display: block;\n  width: 100%;\n  padding: 10px;\n  background-color: hsla(201, 100%, 50%, 1);\n  color: #ffffff;\n  border: none;\n  border-radius: 5px;\n  font-size: 15pt;\n  font-style: bold;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.login-button:hover {\n  background-color: #0056b3;\n}\n\n.error {\n  color: red;\n  margin-top: 10px;\n}\n</style>\n"],"mappings":";OAcSA,UAAuB;;EAbvBC,KAAK,EAAC;AAAiB;gCAC5BC,mBAAA,CAAc,YAAV,OAAK;;EAEFD,KAAK,EAAC;AAAa;gCACtBC,mBAAA,CAAuC;EAAhCC,GAAG,EAAC;AAAU,GAAC,WAAS;;EAG5BF,KAAK,EAAC;AAAa;gCACtBC,mBAAA,CAAuC;EAAhCC,GAAG,EAAC;AAAU,GAAC,WAAS;gCAGjCD,mBAAA,CAAyD;EAAjDE,IAAI,EAAC,QAAQ;EAACH,KAAK,EAAC;GAAe,OAAK;gCAElDC,mBAAA,CAA+E;EAA1EG,GAAuB,EAAvBL,UAAuB;EAACM,GAAG,EAAC,kBAAkB;EAACL,KAAK,EAAC;;;;uBAb1DM,mBAAA,CAeI,OAfJC,UAeI,GAdJC,UAAc,EACdP,mBAAA,CAUO;IAVAQ,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;IAAEZ,KAAK,EAAC;MAClCC,mBAAA,CAGM,OAHNc,UAGM,GAFJC,UAAuC,E,gBACvCf,mBAAA,CAA0E;IAAnEE,IAAI,EAAC,MAAM;IAACc,EAAE,EAAC,UAAU;+DAAUC,IAAA,CAAAC,QAAQ,GAAAC,MAAA;IAAEpB,KAAK,EAAC;iDAAhBkB,IAAA,CAAAC,QAAQ,E,KAEpDlB,mBAAA,CAGM,OAHNoB,UAGM,GAFJC,UAAuC,E,gBACvCrB,mBAAA,CAA8E;IAAvEE,IAAI,EAAC,UAAU;IAACc,EAAE,EAAC,UAAU;+DAAUC,IAAA,CAAAK,QAAQ,GAAAH,MAAA;IAAEpB,KAAK,EAAC;iDAAhBkB,IAAA,CAAAK,QAAQ,E,KAExDC,UAAyD,C,4BAE3DC,UAA+E,EAC/ExB,mBAAA,CAAuB,WAAAyB,gBAAA,CAAjBR,IAAA,CAAAS,UAAU,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}