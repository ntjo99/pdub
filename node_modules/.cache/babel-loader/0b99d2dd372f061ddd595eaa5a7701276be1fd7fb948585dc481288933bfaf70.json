{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-f0dfde0c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"image-loader-container\"\n};\nconst _hoisted_2 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.handleFileChange && $options.handleFileChange(...args)),\n    class: \"file-input\"\n  }, null, 32), $data.imageSrc ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: $data.imageSrc,\n    alt: \"Uploaded Image\",\n    class: \"uploaded-image\"\n  }, null, 8, _hoisted_2)) : _createCommentVNode(\"\", true)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","type","onChange","_cache","args","$options","handleFileChange","$data","imageSrc","src","alt"],"sources":["/home/nathan/repo/pdub/src/components/ImageLoader.vue"],"sourcesContent":["<template>\n    <div class=\"image-loader-container\">\n    <input type=\"file\" @change=\"handleFileChange\" class=\"file-input\" />\n    <img v-if=\"imageSrc\" :src=\"imageSrc\" alt=\"Uploaded Image\" class=\"uploaded-image\">\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      imageSrc: null\n    };\n  },\n  methods: {\n    handleFileChange(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.loadImage(file);\n      }\n    },\n    loadImage(file) {\n      const reader = new FileReader();\n      reader.onload = event => {\n        this.imageSrc = event.target.result;\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Add your component-specific styles here */\n.image-loader-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  min-height: 100vh;\n}\n\n.file-input {\n  margin-top: 50px; /* Adjust the margin to position the button */\n  padding: 10px;\n}\n\n.uploaded-image {\n  margin-top: 20px; /* Space between the button and the image */\n  max-width: 100%;\n  height: auto;\n}\n</style>\n\n"],"mappings":";;;EACSA,KAAK,EAAC;AAAwB;;;uBAAnCC,mBAAA,CAGI,OAHJC,UAGI,GAFJC,mBAAA,CAAmE;IAA5DC,IAAI,EAAC,MAAM;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,gBAAA,IAAAD,QAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;IAAEP,KAAK,EAAC;gBACzCU,KAAA,CAAAC,QAAQ,I,cAAnBV,mBAAA,CAAiF;;IAA3DW,GAAG,EAAEF,KAAA,CAAAC,QAAQ;IAAEE,GAAG,EAAC,gBAAgB;IAACb,KAAK,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}