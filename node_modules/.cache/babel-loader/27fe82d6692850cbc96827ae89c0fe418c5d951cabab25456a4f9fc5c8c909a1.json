{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ImageLoader = _resolveComponent(\"ImageLoader\");\n  const _component_login_component = _resolveComponent(\"login-component\");\n  const _component_date_info_entry = _resolveComponent(\"date-info-entry\");\n  return _openBlock(), _createElementBlock(\"div\", null, [$data.isAuthenticated ? (_openBlock(), _createBlock(_component_ImageLoader, {\n    key: 0,\n    onHandleFileChange: _ctx.logout\n  }, null, 8 /* PROPS */, [\"onHandleFileChange\"])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" Display appropriate view based on authentication status \"), _createVNode(_component_login_component, {\n    onLogin: $options.handleLogin\n  }, null, 8 /* PROPS */, [\"onLogin\"])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)), _createVNode(_component_date_info_entry)]);\n}","map":{"version":3,"names":["_createElementBlock","$data","isAuthenticated","_createBlock","_component_ImageLoader","onHandleFileChange","_ctx","logout","_Fragment","key","_createCommentVNode","_createVNode","_component_login_component","onLogin","$options","handleLogin","_component_date_info_entry"],"sources":["/home/nathan/repo/pdub/src/components/BigPapa.vue"],"sourcesContent":["<template>\n  <div>\n    <ImageLoader v-if=\"isAuthenticated\" @handleFileChange=\"logout\"/> <!-- Display appropriate view based on authentication status -->\n    <login-component v-else @login=\"handleLogin\" />\n        <date-info-entry/>    \n  </div>\n</template>\n\n<script>\nimport LoginComponent from './HelloWorld.vue'; // Import your Login component\nimport ImageLoader from './ImageLoader.vue';\nimport DateInfoEntry from './DateInfoEntry.vue';\n\nexport default {\n  components: {\n    LoginComponent,\n    ImageLoader,  \n    DateInfoEntry,  \n\n\n  },\n  data() {\n    return {\n      isAuthenticated: false,\n      user: null\n    };\n  },\n  methods: {\n    handleLogin(user) {\n      // Check user credentials here\n      if (user.username === 'validUsername' && user.password === 'validPassword') {\n        this.isAuthenticated = true;\n        this.user = user;\n      } else {\n        console.log('Invalid credentials');\n      }\n    },\n  }\n};\n</script>\n\n"],"mappings":";;;;;uBACEA,mBAAA,CAIM,cAHeC,KAAA,CAAAC,eAAe,I,cAAlCC,YAAA,CAAgEC,sBAAA;;IAA3BC,kBAAgB,EAAEC,IAAA,CAAAC;oEACvDP,mBAAA,CAA+CQ,SAAA;IAAAC,GAAA;EAAA,IADkBC,mBAAA,6DAAgE,EACjIC,YAAA,CAA+CC,0BAAA;IAAtBC,OAAK,EAAEC,QAAA,CAAAC;EAAW,qC,mDACvCJ,YAAA,CAAkBK,0BAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}